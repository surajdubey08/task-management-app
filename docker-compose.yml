services:
  # .NET API Backend
  api:
    build:
      context: ./backend/TaskManagement.API
      dockerfile: Dockerfile
    container_name: taskmanagement-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/taskmanagement.db
      - JwtSettings__SecretKey=TaskFlowSecretKey2024!@#$$%^&*()_+1234567890
      - JwtSettings__Issuer=TaskFlow
      - JwtSettings__Audience=TaskFlow
      - JwtSettings__ExpirationMinutes=60
      - JwtSettings__RefreshTokenExpirationDays=7
    ports:
      - "5000:8080"
    networks:
      - taskmanagement-network
    volumes:
      - ./backend/TaskManagement.API/logs:/app/logs
      - taskmanagement_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanagement-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - GENERATE_SOURCEMAP=false
    ports:
      - "3000:8080"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - taskmanagement-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  taskmanagement_data:
    driver: local

networks:
  taskmanagement-network:
    driver: bridge
